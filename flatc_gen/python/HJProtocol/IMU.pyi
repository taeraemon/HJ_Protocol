from __future__ import annotations

import flatbuffers
import numpy as np

import flatbuffers
import typing

uoffset: typing.TypeAlias = flatbuffers.number_types.UOffsetTFlags.py_type

class IMU(object):
  @classmethod
  def GetRootAs(cls, buf: bytes, offset: int) -> IMU: ...
  @classmethod
  def GetRootAsIMU(cls, buf: bytes, offset: int) -> IMU: ...
  @classmethod
  def IMUBufferHasIdentifier(cls, buf: bytes, offset: int, size_prefixed: bool) -> bool: ...
  def Init(self, buf: bytes, pos: int) -> None: ...
  def Accx(self) -> float: ...
  def Accy(self) -> float: ...
  def Accz(self) -> float: ...
  def Gyrx(self) -> float: ...
  def Gyry(self) -> float: ...
  def Gyrz(self) -> float: ...
def IMUStart(builder: flatbuffers.Builder) -> None: ...
def Start(builder: flatbuffers.Builder) -> None: ...
def IMUAddAccx(builder: flatbuffers.Builder, accx: float) -> None: ...
def IMUAddAccy(builder: flatbuffers.Builder, accy: float) -> None: ...
def IMUAddAccz(builder: flatbuffers.Builder, accz: float) -> None: ...
def IMUAddGyrx(builder: flatbuffers.Builder, gyrx: float) -> None: ...
def IMUAddGyry(builder: flatbuffers.Builder, gyry: float) -> None: ...
def IMUAddGyrz(builder: flatbuffers.Builder, gyrz: float) -> None: ...
def IMUEnd(builder: flatbuffers.Builder) -> uoffset: ...
def End(builder: flatbuffers.Builder) -> uoffset: ...

