from __future__ import annotations

import flatbuffers
import numpy as np

import flatbuffers
import typing

uoffset: typing.TypeAlias = flatbuffers.number_types.UOffsetTFlags.py_type

class GPS(object):
  @classmethod
  def GetRootAs(cls, buf: bytes, offset: int) -> GPS: ...
  @classmethod
  def GetRootAsGPS(cls, buf: bytes, offset: int) -> GPS: ...
  @classmethod
  def GPSBufferHasIdentifier(cls, buf: bytes, offset: int, size_prefixed: bool) -> bool: ...
  def Init(self, buf: bytes, pos: int) -> None: ...
  def Lat(self) -> float: ...
  def Lon(self) -> float: ...
  def Alt(self) -> float: ...
  def Sat(self) -> int: ...
  def FixStatus(self) -> int: ...
  def FixType(self) -> int: ...
  def Time(self) -> int: ...
def GPSStart(builder: flatbuffers.Builder) -> None: ...
def Start(builder: flatbuffers.Builder) -> None: ...
def GPSAddLat(builder: flatbuffers.Builder, lat: float) -> None: ...
def GPSAddLon(builder: flatbuffers.Builder, lon: float) -> None: ...
def GPSAddAlt(builder: flatbuffers.Builder, alt: float) -> None: ...
def GPSAddSat(builder: flatbuffers.Builder, sat: int) -> None: ...
def GPSAddFixStatus(builder: flatbuffers.Builder, fixStatus: int) -> None: ...
def GPSAddFixType(builder: flatbuffers.Builder, fixType: int) -> None: ...
def GPSAddTime(builder: flatbuffers.Builder, time: int) -> None: ...
def GPSEnd(builder: flatbuffers.Builder) -> uoffset: ...
def End(builder: flatbuffers.Builder) -> uoffset: ...

